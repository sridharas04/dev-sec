name: CI/CD DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v2

      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '12' # Change this to a compatible Node.js version

      # - name: Clear npm cache
      #   run: npm cache clean --force

      # - name: Install dependencies
      #   run: |
      #     npm install bcrypt@latest || npm install bcryptjs@latest

      # - name: Build Docker image
      #   run: docker build -t myapp .

      # - name: Docker security scan with Trivy
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: myapp

      - name: Install Terrascan
        run: |
          curl -L "$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz
          tar -xf terrascan.tar.gz terrascan && rm terrascan.tar.gz
          sudo install terrascan /usr/local/bin && rm terrascan

      - name: List Terraform files
        run: ls -al # Adjust this path to the directory containing your Terraform files

      # - name: Terrascan Scan
      #   working-directory: ./terraform # Adjust this path to the directory containing your Terraform files
      #   run: terrascan scan -o sarif > terrascan-results.sarif
