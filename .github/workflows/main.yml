name: CI/CD DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '12'

      # - name: Install dependencies
      #   run: |
      #     npm cache clean --force
      #     npm install || npm install bcrypt@latest || npm install bcryptjs@latest

      # - name: Gitleaks Secret Scanning
      #   uses: gitleaks/gitleaks-action@v2
      #   with:
      #     args: "--path=. --report-format=json --report-path=gitleaks-report.json"
      #   continue-on-error: true

      # - name: Setup Snyk
      #   run: |
      #     npm install snyk -g
      #     npm install snyk-to-html -g
      #     snyk auth ${{ secrets.SNYK_TOKEN }}

      # - name: Snyk Open Source Scanning
      #   run: |
      #     snyk test --all-projects --json-file-output=results-opensource.json || true
      #     snyk-to-html -i results-opensource.json -o results-opensource.html
      # - name: Upload Snyk Open Source results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: snyk-opensource-report
      #     path: results-opensource.html

      # - name: Snyk Code Scanning
      #   run: |
      #     snyk code test --json-file-output=results-code.json || true
      #     snyk-to-html -i results-code.json -o results-code.html
      # - name: Upload Snyk Code results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: snyk-code-report
      #     path: results-code.html

      # - name: Snyk Container Scanning
      #   run: |
      #     docker build . -t myapp
      #     snyk container test --file=Dockerfile --json-file-output=results-container.json myapp || true
      #     snyk-to-html -i results-container.json -o results-container.html
      # - name: Upload Snyk Container results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: snyk-container-report
      #     path: results-container.html

      # - name: Snyk IaC Scanning
      #   run: |
      #     snyk iac test --json-file-output=results-iac.json || true
      #     snyk-to-html -i results-iac.json -o results-iac.html
      # - name: Upload Snyk IaC results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: snyk-iac-report
      #     path: results-iac.html

      - name: Wait for the container to be ready
        run: docker run --name dvna -p 9090:9090 -d -v ${{ github.workspace }}/zap-reports:/zap/wrk/zap-reports appsecco/dvna:sqlite && sleep 5

      - name: Create writable directory for ZAP report
        run: mkdir -p ./zap-reports

      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:9090'
          cmd_options: '-r /zap/wrk/zap-reports/zap-report.html'
        continue-on-error: true

      - name: Upload OWASP ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap-reports/zap-report.html

