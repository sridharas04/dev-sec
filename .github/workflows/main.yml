name: CI/CD DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12' # Change this to a compatible Node.js version

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          npm install bcrypt@latest || npm install bcryptjs@latest

      - name: Build Docker image
        run: docker build -t myapp .

      - name: Docker security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: ./terraform # Adjust this path to the directory containing your Terraform files
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform # Adjust this path to the directory containing your Terraform files
        run: terraform plan -out=tfplan

      - name: Install TFSec
        run: |
          wget -qO- https://github.com/aquasecurity/tfsec/releases/download/v0.58.7/tfsec-linux-amd64 > tfsec && \
          chmod +x tfsec && \
          sudo mv tfsec /usr/local/bin/

      - name: TFSec Scan
        working-directory: ./terraform # Adjust this path to the directory containing your Terraform files
        run: tfsec --format sarif --out tfsec-results.sarif

      - name: Notify CodeQL results
        run: |
          echo "CodeQL analysis completed. Review the results at [CodeQL results URL]"

      - name: Notify Docker scan results
        run: |
          echo "Docker security scan completed. Review the results at [Docker scan results URL]"

      - name: Notify TFSec results
        run: |
          echo "TFSec scan completed. Review the results at [TFSec results URL]"
